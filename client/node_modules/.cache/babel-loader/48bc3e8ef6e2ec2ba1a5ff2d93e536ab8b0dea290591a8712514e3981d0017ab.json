{"ast":null,"code":"var _jsxFileName = \"/home/home/test_project/client/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    fetchRepositories();\n  }, []);\n  const fetchRepositories = async () => {\n    try {\n      const response = await fetch('/repositories');\n      const data = await response.json();\n      setRepositories(data);\n    } catch (error) {\n      console.error('Error fetching repositories:', error);\n    }\n  };\n  const syncWithGitHub = async () => {\n    try {\n      const response = await fetch('/sync', {\n        method: 'GET'\n      });\n      if (response.ok) {\n        console.log('Sync started successfully');\n        fetchRepositories();\n      } else {\n        console.error('Failed to start sync:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error starting sync:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Github Trending Repositories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: syncWithGitHub,\n      children: \"Sync with GitHub\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repositories\",\n      children: repositories.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"repository\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: repo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Stars: \", repo.stars]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: repo.url,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"View on GitHub\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, repo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BOCi1fzyIWTfYUJ6DGWtKZ5UKvY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","repositories","setRepositories","fetchRepositories","response","fetch","data","json","error","console","syncWithGitHub","method","ok","log","statusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","repo","name","description","stars","href","url","target","rel","id","_c","$RefreshReg$"],"sources":["/home/home/test_project/client/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [repositories, setRepositories] = useState([]);\n\n  useEffect(() => {\n    fetchRepositories();\n  }, []);\n\n  const fetchRepositories = async () => {\n    try {\n      const response = await fetch('/repositories');\n      const data = await response.json();\n      setRepositories(data);\n    } catch (error) {\n      console.error('Error fetching repositories:', error);\n    }\n  };\n\n  const syncWithGitHub = async () => {\n    try {\n      const response = await fetch('/sync', { method: 'GET' });\n      if (response.ok) {\n        console.log('Sync started successfully');\n        fetchRepositories();\n      } else {\n        console.error('Failed to start sync:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error starting sync:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Github Trending Repositories</h1>\n      <button onClick={syncWithGitHub}>Sync with GitHub</button>\n      <div className=\"repositories\">\n        {repositories.map(repo => (\n          <div key={repo.id} className=\"repository\">\n            <h2>{repo.name}</h2>\n            <p>{repo.description}</p>\n            <p>Stars: {repo.stars}</p>\n            <a href={repo.url} target=\"_blank\" rel=\"noopener noreferrer\">View on GitHub</a>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}